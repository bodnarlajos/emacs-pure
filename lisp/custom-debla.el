(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:slant normal :weight regular :height 130 :width normal :foundry "SAJA" :family "Cascadia Code")))))

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(backup-directory-alist '((".+" . "~/.emacs.d/undo")))
 '(column-number-mode t)
 '(consult-buffer-sources
   '(consult--source-hidden-buffer consult--source-modified-buffer consult--source-buffer consult--source-project-buffer consult--source-project-recent-file consult--source-recent-file consult--source-bookmark consult--source-my-menu))
 '(consult-preview-key [right])
 '(css-indent-offset 2)
 '(cua-mode t)
 '(dap-netcore-install-dir "/home/lbodnar/Projects/")
 '(eldoc-echo-area-prefer-doc-buffer t)
 '(exec-path
   '("/usr/lib/dotnet/host/fxr/6.0.11" "/home/lajbo/Projects/omnisharp-roslyn" "/home/lajbo/Projects/netcoredbg" "/home/lajbo/node_modules/.bin" "/home/lajbo/.ghcup/bin" "/usr/local/sbin" "/usr/local/bin" "/usr/sbin" "/usr/bin" "/sbin" "/bin" "/usr/lib/emacs/29.0.50/x86_64-linux-gnu"))
 '(font-lock-support-mode 'jit-lock-mode t)
 '(initial-frame-alist '((fullscreen . maximized)))
 '(lsp-clients-angular-language-server-command
   '("node" "/home/lbodnar/node_modules/@angular/language-server" "--ngProbeLocations" "/home/lbodnar/node_modules" "--tsProbeLocations" "/home/lbodnar/node_modules" "--stdio"))
 '(lsp-completion-provider :none)
 '(lsp-disabled-clients '(csharp-ls))
 '(lsp-eldoc-render-all t)
 '(lsp-headerline-breadcrumb-enable nil)
 '(lsp-ui-imenu-enable nil)
 '(lsp-ui-peek-enable nil)
 '(menu-bar-mode nil)
 '(next-error-recenter '(4))
 '(safe-local-variable-values '((comment-fill-column . 80)))
 '(tab-first-completion nil)
 '(tool-bar-mode nil)
 '(tree-sitter-major-mode-language-alist
   '((agda-mode . agda)
     (sh-mode . bash)
     (c-mode . c)
     (caml-mode . ocaml)
     (csharp-mode . c-sharp)
     (c++-mode . cpp)
     (d-mode . d)
     (css-mode . css)
     (elm-mode . elm)
     (elixir-mode . elixir)
     (erlang-mode . erlang)
     (go-mode . go)
     (haskell-mode . haskell)
     (hcl-mode . hcl)
     (terraform-mode . hcl)
     (web-mode . html)
     (html-mode . html)
     (mhtml-mode . html)
     (nix-mode . nix)
     (java-mode . java)
     (javascript-mode . javascript)
     (js-mode . javascript)
     (js2-mode . javascript)
     (js3-mode . javascript)
     (json-mode . json)
     (jsonc-mode . json)
     (julia-mode . julia)
     (ocaml-mode . ocaml)
     (perl-mode . perl)
     (php-mode . php)
     (prisma-mode . prisma)
     (python-mode . python)
     (pygn-mode . pgn)
     (rjsx-mode . javascript)
     (ruby-mode . ruby)
     (rust-mode . rust)
     (rustic-mode . rust)
     (scala-mode . scala)
     (swift-mode . swift)
     (tuareg-mode . ocaml)
     (typescript-mode . typescript)
     (verilog-mode . verilog)
     (yaml-mode . yaml)
     (zig-mode . zig)))
 '(tree-sitter-mode-alist
   '((c++-mode . "cpp")
     (rust-mode . "rust")
     (rustic-mode . "rust")
     (emacs-lisp-mode . "elisp")
     (csharp-mode . "sharp")
     (haskell-mode . "haskell")
     (go-mode . "go")
     (sh-mode . "bash")
     (c-mode . "c")
     (web-mode . "html")
     (html-mode . "html")
     (makefile-gmake-mode . "make")
     (makefile-mode . "make")
     (php-mode . "php")
     (ess-mode . "r")
     (sql-mode . "sql")
     (conf-toml-mode . "toml")
     (vhdl-mode . "vhdl")
     (java-mode . "java")
     (js-mode . "javascript")
     (python-mode . "python")
     (ruby-mode . "ruby")
     (tree-sitter-ruby-mode . "ruby")
     (tree-sitter-elisp-mode . "elisp")
     (tree-sitter-c-mode . "c")
     (tree-sitter-lisp-mode . "commonlisp")))
 '(typescript-indent-level 2)
 '(xref-show-definitions-function 'consult-xref)
 '(xref-show-xrefs-function 'consult-xref))

(setq my/notes-path (expand-file-name "~/Insync/bodnarlajoska@gmail.com/Google Drive/Documents/notes/"))
(add-to-list 'my/menu-items '("Format document" . indent-buffer))
(add-to-list 'my/menu-items '("Terminal" . 'my/start-term))
(global-hl-line-mode +1)

(load-theme 'deeper-blue t nil)

(message "custom file loaded")

